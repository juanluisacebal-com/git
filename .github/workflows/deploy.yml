name: Deploy
env:
  RUTAVOLUMES: ${{ secrets.RUTAVOLUMES }}

on:
  push:
    branches:
      - main
  workflow_dispatch: {}


jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Git Pull con SubmÃ³dulos
        env:
          RUTA_COMPOSES: ${{ secrets.RUTA_COMPOSES }}
        run: |
          set -xv
          cd $RUTA_COMPOSES
          echo "Ruta de los repos: $RUTA_COMPOSES"
          git pull --recurse-submodules > git_pull.log 2>&1
          cat git_pull.log

      - name: Docker Compose Down
        env:
          RUTA_COMPOSES: ${{ secrets.RUTA_COMPOSES }}
        run: |
            set -xv
            cd $RUTA_COMPOSES/docker
            docker compose --verbose -f docker-compose.yml down || true
            # files=(docker-compose*.yml)
            # args=()
            # for f in "${files[@]}"; do
            #   args+=( -f "$f" )
            # done
            # docker compose --verbose "${args[@]}" down || true

      - name: Docker Compose Build
        env:
          RUTA_COMPOSES: ${{ secrets.RUTA_COMPOSES }}
        run: |
            set -xv
            cd $RUTA_COMPOSES/docker
            files=(docker-compose*.yml)
            args=()
            for f in "${files[@]}"; do
              args+=( -f "$f" )
            done
            docker compose --verbose "${args[@]}" build --pull --no-cache || true

      - name: Docker Compose Up
        env:
          RUTA_COMPOSES: ${{ secrets.RUTA_COMPOSES }}
        run: |
            set -xv
            cd $RUTA_COMPOSES/docker
            files=(docker-compose*.yml)
            args=()
            for f in "${files[@]}"; do
              args+=( -f "$f" )
            done
            docker compose --verbose "${args[@]}" up --force-recreate --remove-orphans